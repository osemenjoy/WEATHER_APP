{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Osemen\\\\Documents\\\\Weather_App\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from './components/SearchBar';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport FiveDayForecast from './components/FiveDayForecast';\nimport Loading from './components/Loading';\nimport ErrorMessage from './components/ErrorMessage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'YOUR_OPENWEATHER_API_KEY'; // Replace with your actual API key\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5';\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [city, setCity] = useState('');\n  const fetchWeatherData = async cityName => {\n    setLoading(true);\n    setError('');\n    try {\n      // Fetch current weather\n      const weatherResponse = await fetch(`${BASE_URL}/weather?q=${cityName}&appid=${API_KEY}&units=metric`);\n      if (!weatherResponse.ok) {\n        throw new Error('City not found');\n      }\n      const weatherResult = await weatherResponse.json();\n\n      // Fetch 5-day forecast\n      const forecastResponse = await fetch(`${BASE_URL}/forecast?q=${cityName}&appid=${API_KEY}&units=metric`);\n      if (!forecastResponse.ok) {\n        throw new Error('Failed to fetch forecast data');\n      }\n      const forecastResult = await forecastResponse.json();\n      setWeatherData(weatherResult);\n      setForecastData(forecastResult);\n      setCity(cityName);\n    } catch (err) {\n      setError(err.message);\n      setWeatherData(null);\n      setForecastData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Forecast App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: fetchWeatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this), weatherData && !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(WeatherDisplay, {\n          weatherData: weatherData,\n          city: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), forecastData && /*#__PURE__*/_jsxDEV(FiveDayForecast, {\n          forecastData: forecastData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true), !weatherData && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to Weather Forecast App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Search for a city to get current weather and 5-day forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1UOu78yv/YdgcMsSwVLMUPJsvas=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","WeatherDisplay","FiveDayForecast","Loading","ErrorMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","BASE_URL","App","_s","weatherData","setWeatherData","forecastData","setForecastData","loading","setLoading","error","setError","city","setCity","fetchWeatherData","cityName","weatherResponse","fetch","ok","Error","weatherResult","json","forecastResponse","forecastResult","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["C:/Users/Osemen/Documents/Weather_App/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SearchBar from './components/SearchBar';\r\nimport WeatherDisplay from './components/WeatherDisplay';\r\nimport FiveDayForecast from './components/FiveDayForecast';\r\nimport Loading from './components/Loading';\r\nimport ErrorMessage from './components/ErrorMessage';\r\nimport './App.css';\r\n\r\nconst API_KEY = 'YOUR_OPENWEATHER_API_KEY'; // Replace with your actual API key\r\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5';\r\n\r\nfunction App() {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [forecastData, setForecastData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [city, setCity] = useState('');\r\n\r\n  const fetchWeatherData = async (cityName) => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Fetch current weather\r\n      const weatherResponse = await fetch(\r\n        `${BASE_URL}/weather?q=${cityName}&appid=${API_KEY}&units=metric`\r\n      );\r\n      \r\n      if (!weatherResponse.ok) {\r\n        throw new Error('City not found');\r\n      }\r\n      \r\n      const weatherResult = await weatherResponse.json();\r\n      \r\n      // Fetch 5-day forecast\r\n      const forecastResponse = await fetch(\r\n        `${BASE_URL}/forecast?q=${cityName}&appid=${API_KEY}&units=metric`\r\n      );\r\n      \r\n      if (!forecastResponse.ok) {\r\n        throw new Error('Failed to fetch forecast data');\r\n      }\r\n      \r\n      const forecastResult = await forecastResponse.json();\r\n      \r\n      setWeatherData(weatherResult);\r\n      setForecastData(forecastResult);\r\n      setCity(cityName);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setWeatherData(null);\r\n      setForecastData(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Weather Forecast App</h1>\r\n        <SearchBar onSearch={fetchWeatherData} />\r\n      </header>\r\n      \r\n      <main className=\"App-main\">\r\n        {loading && <Loading />}\r\n        \r\n        {error && <ErrorMessage message={error} />}\r\n        \r\n        {weatherData && !loading && !error && (\r\n          <>\r\n            <WeatherDisplay weatherData={weatherData} city={city} />\r\n            {forecastData && <FiveDayForecast forecastData={forecastData} />}\r\n          </>\r\n        )}\r\n        \r\n        {!weatherData && !loading && !error && (\r\n          <div className=\"welcome-message\">\r\n            <h2>Welcome to Weather Forecast App</h2>\r\n            <p>Search for a city to get current weather and 5-day forecast</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,OAAO,GAAG,0BAA0B,CAAC,CAAC;AAC5C,MAAMC,QAAQ,GAAG,yCAAyC;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMwB,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3CN,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF;MACA,MAAMK,eAAe,GAAG,MAAMC,KAAK,CACjC,GAAGhB,QAAQ,cAAcc,QAAQ,UAAUf,OAAO,eACpD,CAAC;MAED,IAAI,CAACgB,eAAe,CAACE,EAAE,EAAE;QACvB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMC,aAAa,GAAG,MAAMJ,eAAe,CAACK,IAAI,CAAC,CAAC;;MAElD;MACA,MAAMC,gBAAgB,GAAG,MAAML,KAAK,CAClC,GAAGhB,QAAQ,eAAec,QAAQ,UAAUf,OAAO,eACrD,CAAC;MAED,IAAI,CAACsB,gBAAgB,CAACJ,EAAE,EAAE;QACxB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAClD;MAEA,MAAMI,cAAc,GAAG,MAAMD,gBAAgB,CAACD,IAAI,CAAC,CAAC;MAEpDhB,cAAc,CAACe,aAAa,CAAC;MAC7Bb,eAAe,CAACgB,cAAc,CAAC;MAC/BV,OAAO,CAACE,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZb,QAAQ,CAACa,GAAG,CAACC,OAAO,CAAC;MACrBpB,cAAc,CAAC,IAAI,CAAC;MACpBE,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB9B,OAAA;MAAQ6B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B9B,OAAA;QAAA8B,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BlC,OAAA,CAACN,SAAS;QAACyC,QAAQ,EAAElB;MAAiB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAETlC,OAAA;MAAM6B,SAAS,EAAC,UAAU;MAAAC,QAAA,GACvBnB,OAAO,iBAAIX,OAAA,CAACH,OAAO;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEtBrB,KAAK,iBAAIb,OAAA,CAACF,YAAY;QAAC8B,OAAO,EAAEf;MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEzC3B,WAAW,IAAI,CAACI,OAAO,IAAI,CAACE,KAAK,iBAChCb,OAAA,CAAAE,SAAA;QAAA4B,QAAA,gBACE9B,OAAA,CAACL,cAAc;UAACY,WAAW,EAAEA,WAAY;UAACQ,IAAI,EAAEA;QAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACvDzB,YAAY,iBAAIT,OAAA,CAACJ,eAAe;UAACa,YAAY,EAAEA;QAAa;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eAChE,CACH,EAEA,CAAC3B,WAAW,IAAI,CAACI,OAAO,IAAI,CAACE,KAAK,iBACjCb,OAAA;QAAK6B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B9B,OAAA;UAAA8B,QAAA,EAAI;QAA+B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxClC,OAAA;UAAA8B,QAAA,EAAG;QAA2D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC5B,EAAA,CA1EQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA4EZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}